//DEPEND: "C:\Users\Christoph\OneDrive\workspaces\reactis\ExperimentManager\.\tester\experiment2\temp\Emergency_Blinking.mdl" 1442528621.000 115692
\version "V2015";

// ------------------------------------------ Simulink --------------------------------------

\simulinkModel Emergency_095Blinking : [\simulinkVersion 88X4, \wordSize32,  \sample 8X1, \intOverflow\warning, \intSaturation\none, \infNanCheck\none]

\begin
  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046If_045action_046Switch_032Case_032Action_010Subsystem() 
  \begin
    \const HAZARD_RB_LEFT : \double = 8X4;

    \enable @Action_032Port: \bool\action ;

    \outport @out: \double \init  0X0;

    \var @Constant111: \double \sample \inf;

    \define @Constant111 := HAZARD_RB_LEFT,
            @out := @Constant111;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046If_045action_046Switch_032Case_032Action_010Subsystem1() 
  \begin
    \const HAZARD_RB_RIGHT : \double = 9X4;

    \enable @Action_032Port: \bool\action ;

    \outport @out: \double \init  0X0;

    \var @Constant3: \double \sample \inf;

    \define @Constant3 := HAZARD_RB_RIGHT,
            @out := @Constant3;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046If_045action_046Switch_032Case_032Action_010Subsystem2() 
  \begin
    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsActual: \double \sample ~8X1;

    \outport @out: \double \init  0X0;

    \define @out := @rb_095IndicatorsActual;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046If_045action() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046If_045action_046Switch_032Case_032Action_010Subsystem \as Switch_032Case_032Action_010Subsystem,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046If_045action_046Switch_032Case_032Action_010Subsystem1 \as Switch_032Case_032Action_010Subsystem1,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046If_045action_046Switch_032Case_032Action_010Subsystem2 \as Switch_032Case_032Action_010Subsystem2;

    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsRequested: \double,
            @rb_095IndicatorsActual: \double;

    \outport @Out: \double \init  0X0;

    \var @Merge: \double,
         @Switch_032Case:  <|\bool *\bool *\bool|> ,
         @Switch_032Case_p1: \bool,
         @Switch_032Case_p2: \bool,
         @Switch_032Case_p3: \bool;

    \define @Merge := \merge(Switch_032Case_032Action_010Subsystem::@out, Switch_032Case_032Action_010Subsystem1::@out, Switch_032Case_032Action_010Subsystem2::@out),
            @Switch_032Case := {\if \if \i32(@rb_095IndicatorsRequested)==\i32(2) \then ({8X1}: SCC: 2) \else 0X0 \then  <|\true, \false, \false|>  \else ({\if \if \i32(@rb_095IndicatorsRequested)==\i32(3) \then ({8X1}: SCC: 3) \else 0X0 \then  <|\false, \true, \false|>  \else ({{ <|\false, \false, \true|> }: SCC: ~1}: SCD: ~1)}: SCD: ~1)}: SCD: ~1,
            @Switch_032Case_p1 := @Switch_032Case#1,
            @Switch_032Case_p2 := @Switch_032Case#2,
            @Switch_032Case_p3 := @Switch_032Case#3,
            Switch_032Case_032Action_010Subsystem::@Action_032Port := @Switch_032Case_p1,
            Switch_032Case_032Action_010Subsystem1::@Action_032Port := @Switch_032Case_p2,
            Switch_032Case_032Action_010Subsystem2::@rb_095IndicatorsActual := @rb_095IndicatorsActual,
            Switch_032Case_032Action_010Subsystem2::@Action_032Port := @Switch_032Case_p3,
            @Out := @Merge;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046If_045else_045action() 
  \begin
    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsActual: \double \sample ~8X1;

    \outport @out: \double \init  0X0;

    \define @out := @rb_095IndicatorsActual;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046else_045action() 
  \begin
    \const INDICATORS_OFF : \double = 0eX3;

    \enable @Action_032Port: \bool\action ;

    \outport @out: \double \init  0X0;

    \var @Constant3: \double \sample \inf;

    \define @Constant3 := INDICATORS_OFF,
            @out := @Constant3;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046If_045action \as If_045action,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046If_045else_045action \as If_045else_045action,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_046else_045action \as else_045action;

    \const LEFT : \double = 8X2,
           RB_TRUE : \double = 8X1,
           RIGHT : \double = 0cX2;

    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsRequested: \double,
            @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus: \double,
            @rb_095IndicatorsActual: \double;

    \outport @Out: \double \init  0X0;

    \var @If:  <|\bool *\bool *\bool|> ,
         @If_in1: \double,
         @If_in2: \double,
         @If_p1: \bool,
         @If_p2: \bool,
         @If_p3: \bool,
         @Merge: \double;

    \define @If := \if ({({\u8((@If_in1==LEFT))}: IFC: 0)||({\u8((@If_in1==RIGHT))}: IFC: 0)}: D: 0) \then ({ <|\true, \false, \false|> }: B: 3) \else \if ({{@If_in2==RB_TRUE}: IFC: 0}: D: 0) \then ({ <|\false, \true, \false|> }: B: 3) \else ({ <|\false, \false, \true|> }: B: 3),
            @If_in1 := @rb_095IndicatorsRequested,
            @If_in2 := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            @If_p1 := @If#1,
            @If_p2 := @If#2,
            @If_p3 := @If#3,
            If_045action::@rb_095IndicatorsRequested := @rb_095IndicatorsRequested,
            If_045action::@rb_095IndicatorsActual := @rb_095IndicatorsActual,
            If_045action::@Action_032Port := @If_p1,
            If_045else_045action::@rb_095IndicatorsActual := @rb_095IndicatorsActual,
            If_045else_045action::@Action_032Port := @If_p2,
            @Merge := \merge(If_045action::@Out, If_045else_045action::@out, else_045action::@out),
            else_045action::@Action_032Port := @If_p3,
            @Out := @Merge;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action_046If_045action() 
  \begin
    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsActual: \double \sample ~8X1;

    \outport @Out: \double \init  0X0;

    \define @Out := @rb_095IndicatorsActual;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action_046else_045action_046Switch_032Case_032Action_010Subsystem() 
  \begin
    \const RIGHT : \double = 0cX2;

    \enable @Action_032Port: \bool\action ;

    \outport @out: \double \init  0X0;

    \var @Constant3: \double \sample \inf;

    \define @Constant3 := RIGHT,
            @out := @Constant3;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action_046else_045action_046Switch_032Case_032Action_010Subsystem1() 
  \begin
    \const LEFT : \double = 8X2;

    \enable @Action_032Port: \bool\action ;

    \outport @out: \double \init  0X0;

    \var @Constant3: \double \sample \inf;

    \define @Constant3 := LEFT,
            @out := @Constant3;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action_046else_045action_046Switch_032Case_032Action_010Subsystem2() 
  \begin
    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsActual: \double \sample ~8X1;

    \outport @out: \double \init  0X0;

    \define @out := @rb_095IndicatorsActual;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action_046else_045action() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action_046else_045action_046Switch_032Case_032Action_010Subsystem \as Switch_032Case_032Action_010Subsystem,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action_046else_045action_046Switch_032Case_032Action_010Subsystem1 \as Switch_032Case_032Action_010Subsystem1,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action_046else_045action_046Switch_032Case_032Action_010Subsystem2 \as Switch_032Case_032Action_010Subsystem2;

    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsActual: \double;

    \outport @Out: \double \init  0X0;

    \var @Merge: \double,
         @Switch_032Case:  <|\bool *\bool *\bool|> ,
         @Switch_032Case_p1: \bool,
         @Switch_032Case_p2: \bool,
         @Switch_032Case_p3: \bool;

    \define @Merge := \merge(Switch_032Case_032Action_010Subsystem::@out, Switch_032Case_032Action_010Subsystem1::@out, Switch_032Case_032Action_010Subsystem2::@out),
            @Switch_032Case := {\if \if \i32(@rb_095IndicatorsActual)==\i32(9) \then ({8X1}: SCC: 9) \else 0X0 \then  <|\true, \false, \false|>  \else ({\if \if \i32(@rb_095IndicatorsActual)==\i32(8) \then ({8X1}: SCC: 8) \else 0X0 \then  <|\false, \true, \false|>  \else ({{ <|\false, \false, \true|> }: SCC: ~1}: SCD: ~1)}: SCD: ~1)}: SCD: ~1,
            @Switch_032Case_p1 := @Switch_032Case#1,
            @Switch_032Case_p2 := @Switch_032Case#2,
            @Switch_032Case_p3 := @Switch_032Case#3,
            Switch_032Case_032Action_010Subsystem::@Action_032Port := @Switch_032Case_p1,
            Switch_032Case_032Action_010Subsystem1::@Action_032Port := @Switch_032Case_p2,
            Switch_032Case_032Action_010Subsystem2::@rb_095IndicatorsActual := @rb_095IndicatorsActual,
            Switch_032Case_032Action_010Subsystem2::@Action_032Port := @Switch_032Case_p3,
            @Out := @Merge;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action_046If_045action \as If_045action,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action_046else_045action \as else_045action;

    \const RB_TRUE : \double = 8X1;

    \enable @Action_032Port: \bool\action ;

    \inport @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus: \double,
            @rb_095IndicatorsActual: \double;

    \outport @Out: \double \init  0X0;

    \var @If:  <|\bool *\bool|> ,
         @If_in1: \double,
         @If_p1: \bool,
         @If_p2: \bool,
         @Merge: \double;

    \define @If := \if ({{@If_in1==RB_TRUE}: IFC: 0}: D: 0) \then ({ <|\true, \false|> }: B: 2) \else ({ <|\false, \true|> }: B: 2),
            @If_in1 := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            @If_p1 := @If#1,
            @If_p2 := @If#2,
            If_045action::@rb_095IndicatorsActual := @rb_095IndicatorsActual,
            If_045action::@Action_032Port := @If_p1,
            @Merge := \merge(If_045action::@Out, else_045action::@Out),
            else_045action::@rb_095IndicatorsActual := @rb_095IndicatorsActual,
            else_045action::@Action_032Port := @If_p2,
            @Out := @Merge;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045else_045action() 
  \begin
    \const HAZARD : \double = 8X1;

    \enable @Action_032Port: \bool\action ;

    \outport @out: \double \init  0X0;

    \var @Constant2: \double \sample \inf;

    \define @Constant2 := HAZARD,
            @out := @Constant2;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045else_045action1() 
  \begin
    \const INDICATORS_OFF : \double = 0eX3;

    \enable @Action_032Port: \bool\action ;

    \outport @out: \double \init  0X0;

    \var @Default: \double \sample \inf;

    \define @Default := INDICATORS_OFF,
            @out := @Default;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045action \as If_045action,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045else_045action \as If_045else_045action,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT_046If_045else_045action1 \as If_045else_045action1;

    \const LEFT : \double = 8X2,
           RB_TRUE : \double = 8X1,
           RIGHT : \double = 0cX2;

    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsRequested: \double,
            @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus: \double,
            @rb_095IndicatorsActual: \double;

    \outport @Out: \double \init  0X0;

    \var @If:  <|\bool *\bool *\bool|> ,
         @If_in1: \double,
         @If_in2: \double,
         @If_p1: \bool,
         @If_p2: \bool,
         @If_p3: \bool,
         @Merge: \double;

    \define @If := \if ({({\u8((@If_in1==LEFT))}: IFC: 0)||({\u8((@If_in1==RIGHT))}: IFC: 0)}: D: 0) \then ({ <|\true, \false, \false|> }: B: 3) \else \if ({{@If_in2==RB_TRUE}: IFC: 0}: D: 0) \then ({ <|\false, \true, \false|> }: B: 3) \else ({ <|\false, \false, \true|> }: B: 3),
            @If_in1 := @rb_095IndicatorsRequested,
            @If_in2 := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            @If_p1 := @If#1,
            @If_p2 := @If#2,
            @If_p3 := @If#3,
            If_045action::@rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            If_045action::@rb_095IndicatorsActual := @rb_095IndicatorsActual,
            If_045action::@Action_032Port := @If_p1,
            If_045else_045action::@Action_032Port := @If_p2,
            If_045else_045action1::@Action_032Port := @If_p3,
            @Merge := \merge(If_045action::@Out, If_045else_045action::@out, If_045else_045action1::@out),
            @Out := @Merge;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046INDICATORS_095OFF_046If_045action() 
  \begin
    \const HAZARD : \double = 8X1;

    \enable @Action_032Port: \bool\action ;

    \outport @Out: \double \init  0X0;

    \var @Constant3: \double \sample \inf;

    \define @Constant3 := HAZARD,
            @Out := @Constant3;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046INDICATORS_095OFF_046else_045action() 
  \begin
    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsRequested: \double \sample ~8X1;

    \outport @Out: \double \init  0X0;

    \define @Out := @rb_095IndicatorsRequested;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046INDICATORS_095OFF() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046INDICATORS_095OFF_046If_045action \as If_045action,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046INDICATORS_095OFF_046else_045action \as else_045action;

    \const RB_TRUE : \double = 8X1;

    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsRequested: \double,
            @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus: \double;

    \outport @Out: \double \init  0X0;

    \var @If:  <|\bool *\bool|> ,
         @If_in1: \double,
         @If_p1: \bool,
         @If_p2: \bool,
         @Merge: \double;

    \define @If := \if ({{@If_in1==RB_TRUE}: IFC: 0}: D: 0) \then ({ <|\true, \false|> }: B: 2) \else ({ <|\false, \true|> }: B: 2),
            @If_in1 := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            @If_p1 := @If#1,
            @If_p2 := @If#2,
            If_045action::@Action_032Port := @If_p1,
            @Merge := \merge(If_045action::@Out, else_045action::@Out),
            else_045action::@rb_095IndicatorsRequested := @rb_095IndicatorsRequested,
            else_045action::@Action_032Port := @If_p2,
            @Out := @Merge;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046LEFT_044_032RIGHT_044_032LEFT_095AND_095RIGHT_046If_045action() 
  \begin
    \const RB_HAZARD : \double = 0cX3;

    \enable @Action_032Port: \bool\action ;

    \outport @Out: \double \init  0X0;

    \var @Constant3: \double \sample \inf;

    \define @Constant3 := RB_HAZARD,
            @Out := @Constant3;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046LEFT_044_032RIGHT_044_032LEFT_095AND_095RIGHT_046else_045action() 
  \begin
    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsRequested: \double \sample ~8X1;

    \outport @Out: \double \init  0X0;

    \define @Out := @rb_095IndicatorsRequested;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046LEFT_044_032RIGHT_044_032LEFT_095AND_095RIGHT() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046LEFT_044_032RIGHT_044_032LEFT_095AND_095RIGHT_046If_045action \as If_045action,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046LEFT_044_032RIGHT_044_032LEFT_095AND_095RIGHT_046else_045action \as else_045action;

    \const RB_TRUE : \double = 8X1;

    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsRequested: \double,
            @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus: \double;

    \outport @Out: \double \init  0X0;

    \var @If:  <|\bool *\bool|> ,
         @If_in1: \double,
         @If_p1: \bool,
         @If_p2: \bool,
         @Merge: \double;

    \define @If := \if ({{@If_in1==RB_TRUE}: IFC: 0}: D: 0) \then ({ <|\true, \false|> }: B: 2) \else ({ <|\false, \true|> }: B: 2),
            @If_in1 := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            @If_p1 := @If#1,
            @If_p2 := @If#2,
            If_045action::@Action_032Port := @If_p1,
            @Merge := \merge(If_045action::@Out, else_045action::@Out),
            else_045action::@rb_095IndicatorsRequested := @rb_095IndicatorsRequested,
            else_045action::@Action_032Port := @If_p2,
            @Out := @Merge;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046If_045action_046If_045action() 
  \begin
    \const RB_HAZARD : \double = 0cX3;

    \enable @Action_032Port: \bool\action ;

    \outport @out: \double \init  0X0;

    \var @Constant3: \double \sample \inf;

    \define @Constant3 := RB_HAZARD,
            @out := @Constant3;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046If_045action_046else_045action() 
  \begin
    \const HAZARD : \double = 8X1;

    \enable @Action_032Port: \bool\action ;

    \outport @out: \double \init  0X0;

    \var @Constant3: \double \sample \inf;

    \define @Constant3 := HAZARD,
            @out := @Constant3;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046If_045action() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046If_045action_046If_045action \as If_045action,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046If_045action_046else_045action \as else_045action;

    \const LEFT : \double = 8X2,
           RIGHT : \double = 0cX2;

    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsRequested: \double;

    \outport @Out: \double \init  0X0;

    \var @If:  <|\bool *\bool|> ,
         @If_in1: \double,
         @If_p1: \bool,
         @If_p2: \bool,
         @Merge: \double;

    \define @If := \if ({({\u8((@If_in1==LEFT))}: IFC: 0)||({\u8((@If_in1==RIGHT))}: IFC: 0)}: D: 0) \then ({ <|\true, \false|> }: B: 2) \else ({ <|\false, \true|> }: B: 2),
            @If_in1 := @rb_095IndicatorsRequested,
            @If_p1 := @If#1,
            @If_p2 := @If#2,
            If_045action::@Action_032Port := @If_p1,
            @Merge := \merge(If_045action::@out, else_045action::@out),
            else_045action::@Action_032Port := @If_p2,
            @Out := @Merge;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046else_045action_046If_045action() 
  \begin
    \const LEFT : \double = 8X2;

    \enable @Action_032Port: \bool\action ;

    \outport @Out: \double \init  0X0;

    \var @Constant3: \double \sample \inf;

    \define @Constant3 := LEFT,
            @Out := @Constant3;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046else_045action_046else_045action() 
  \begin
    \const RIGHT : \double = 0cX2;

    \enable @Action_032Port: \bool\action ;

    \outport @Out: \double \init  0X0;

    \var @Constant3: \double \sample \inf;

    \define @Constant3 := RIGHT,
            @Out := @Constant3;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046else_045action_046else_045action1() 
  \begin
    \const INDICATORS_OFF : \double = 0eX3;

    \enable @Action_032Port: \bool\action ;

    \outport @Out: \double \init  0X0;

    \var @Default: \double \sample \inf;

    \define @Default := INDICATORS_OFF,
            @Out := @Default;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046else_045action() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046else_045action_046If_045action \as If_045action,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046else_045action_046else_045action \as else_045action,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046else_045action_046else_045action1 \as else_045action1;

    \const LEFT : \double = 8X2,
           RIGHT : \double = 0cX2;

    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsRequested: \double;

    \outport @Out: \double \init  0X0;

    \var @If:  <|\bool *\bool *\bool|> ,
         @If_in1: \double,
         @If_p1: \bool,
         @If_p2: \bool,
         @If_p3: \bool,
         @Merge: \double;

    \define @If := \if ({{@If_in1==LEFT}: IFC: 0}: D: 0) \then ({ <|\true, \false, \false|> }: B: 3) \else \if ({{@If_in1==RIGHT}: IFC: 0}: D: 0) \then ({ <|\false, \true, \false|> }: B: 3) \else ({ <|\false, \false, \true|> }: B: 3),
            @If_in1 := @rb_095IndicatorsRequested,
            @If_p1 := @If#1,
            @If_p2 := @If#2,
            @If_p3 := @If#3,
            If_045action::@Action_032Port := @If_p1,
            @Merge := \merge(If_045action::@Out, else_045action::@Out, else_045action1::@Out),
            else_045action::@Action_032Port := @If_p2,
            else_045action1::@Action_032Port := @If_p3,
            @Out := @Merge;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046If_045action \as If_045action,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD_046else_045action \as else_045action;

    \const RB_TRUE : \double = 8X1;

    \enable @Action_032Port: \bool\action ;

    \inport @rb_095IndicatorsRequested: \double,
            @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus: \double;

    \outport @Out: \double \init  0X0;

    \var @If:  <|\bool *\bool|> ,
         @If_in1: \double,
         @If_p1: \bool,
         @If_p2: \bool,
         @Merge: \double;

    \define @If := \if ({{@If_in1==RB_TRUE}: IFC: 0}: D: 0) \then ({ <|\true, \false|> }: B: 2) \else ({ <|\false, \true|> }: B: 2),
            @If_in1 := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            @If_p1 := @If#1,
            @If_p2 := @If#2,
            If_045action::@rb_095IndicatorsRequested := @rb_095IndicatorsRequested,
            If_045action::@Action_032Port := @If_p1,
            @Merge := \merge(If_045action::@Out, else_045action::@Out),
            else_045action::@rb_095IndicatorsRequested := @rb_095IndicatorsRequested,
            else_045action::@Action_032Port := @If_p2,
            @Out := @Merge;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046default() 
  \begin
    \const INDICATORS_OFF : \double = 0eX3;

    \enable @Action_032Port: \bool\action ;

    \outport @Out: \double \init  0X0;

    \var @Default: \double \sample \inf;

    \define @Default := INDICATORS_OFF,
            @Out := @Default;

  \end;


  \system Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD \as HAZARD,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT \as HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046INDICATORS_095OFF \as INDICATORS_095OFF,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046LEFT_044_032RIGHT_044_032LEFT_095AND_095RIGHT \as LEFT_044_032RIGHT_044_032LEFT_095AND_095RIGHT,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046RB_095HAZARD \as RB_095HAZARD,
            Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model_046default \as default;

    \inport @rb_095IndicatorsRequested: \double,
            @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus: \double,
            @rb_095IndicatorsActual: \double;

    \outport @rb_095IndicatorsNew: \double;

    \var @Merge: \double,
         @current_032state:  <|\bool *\bool *\bool *\bool *\bool *\bool|> ,
         @current_032state_p1: \bool,
         @current_032state_p2: \bool,
         @current_032state_p3: \bool,
         @current_032state_p4: \bool,
         @current_032state_p5: \bool,
         @current_032state_p6: \bool;

    \define HAZARD::@rb_095IndicatorsRequested := @rb_095IndicatorsRequested,
            HAZARD::@rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            HAZARD::@rb_095IndicatorsActual := @rb_095IndicatorsActual,
            HAZARD::@Action_032Port := @current_032state_p1,
            HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT::@rb_095IndicatorsRequested := @rb_095IndicatorsRequested,
            HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT::@rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT::@rb_095IndicatorsActual := @rb_095IndicatorsActual,
            HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT::@Action_032Port := @current_032state_p4,
            INDICATORS_095OFF::@rb_095IndicatorsRequested := @rb_095IndicatorsRequested,
            INDICATORS_095OFF::@rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            INDICATORS_095OFF::@Action_032Port := @current_032state_p5,
            LEFT_044_032RIGHT_044_032LEFT_095AND_095RIGHT::@rb_095IndicatorsRequested := @rb_095IndicatorsRequested,
            LEFT_044_032RIGHT_044_032LEFT_095AND_095RIGHT::@rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            LEFT_044_032RIGHT_044_032LEFT_095AND_095RIGHT::@Action_032Port := @current_032state_p3,
            @Merge := \merge(HAZARD::@Out, RB_095HAZARD::@Out, LEFT_044_032RIGHT_044_032LEFT_095AND_095RIGHT::@Out, HAZARD_095RB_095LEFT_044_032HAZARD_095RB_095RIGHT::@Out, INDICATORS_095OFF::@Out, default::@Out),
            RB_095HAZARD::@rb_095IndicatorsRequested := @rb_095IndicatorsRequested,
            RB_095HAZARD::@rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            RB_095HAZARD::@Action_032Port := @current_032state_p2,
            @current_032state := {
 \if \if \i32(@rb_095IndicatorsActual)==\i32(1) \then ({8X1}: SCC: 1) \else 0X0 \then  <|\true, \false, \false, \false, \false, \false|>  \else
  ({\if \if \i32(@rb_095IndicatorsActual)==\i32(6) \then ({8X1}: SCC: 6) \else 0X0 \then  <|\false, \true, \false, \false, \false, \false|>  \else ({\if (\if \i32(@rb_095IndicatorsActual)==\i32(2) \then ({8X1}: SCC: 2) \else 0X0)||((\if \i32(@rb_095IndicatorsActual)==\i32(3) \then ({8X1}: SCC: 3) \else 0X0)||(\if \i32(@rb_095IndicatorsActual)==\i32(4) \then ({8X1}: SCC: 4) \else 0X0)) \then  <|\false, \false, \true, \false, \false, \false|>  \else ({\if (\if \i32(@rb_095IndicatorsActual)==\i32(8) \then ({8X1}: SCC: 8) \else 0X0)||(\if \i32(@rb_095IndicatorsActual)==\i32(9) \then ({8X1}: SCC: 9) \else 0X0) \then  <|\false, \false, \false, \true, \false, \false|>  \else ({\if \if \i32(@rb_095IndicatorsActual)==\i32(7) \then ({8X1}: SCC: 7) \else 0X0 \then  <|\false, \false, \false, \false, \true, \false|>  \else ({{ <|\false, \false, \false, \false, \false, \true|> }: SCC: ~1}: SCD: ~1)}: SCD: ~1)}: SCD: ~1)}: SCD: ~1)}: SCD: ~1)}: SCD: ~1,
            @current_032state_p1 := @current_032state#1,
            @current_032state_p2 := @current_032state#2,
            @current_032state_p3 := @current_032state#3,
            @current_032state_p4 := @current_032state#4,
            @current_032state_p5 := @current_032state#5,
            @current_032state_p6 := @current_032state#6,
            default::@Action_032Port := @current_032state_p6,
            @rb_095IndicatorsNew := @Merge;

  \end;


  \system Emergency_095Blinking() 
  \begin
    \import Emergency_095Blinking_046Emergency_032Blinking_032Controller_032Model \as Emergency_032Blinking_032Controller_032Model;

    \inport @rb_095IndicatorsRequested: \double,
            @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus: \double;

    \outport @rb_095IndicatorsNew: \double,
             @rb_095state: \double;

    \var @Memory: \double \sample ~8X1 \init  0eX3;

    \define Emergency_032Blinking_032Controller_032Model::@rb_095IndicatorsRequested := @rb_095IndicatorsRequested,
            Emergency_032Blinking_032Controller_032Model::@rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus := @rb_095indicators_095HzrdSwtchEdgesIsPressedPlaus,
            Emergency_032Blinking_032Controller_032Model::@rb_095IndicatorsActual := @Memory,
            @Memory := \delay((Emergency_032Blinking_032Controller_032Model::@rb_095IndicatorsNew)),
            @rb_095IndicatorsNew := Emergency_032Blinking_032Controller_032Model::@rb_095IndicatorsNew,
            @rb_095state := @Memory;

  \end;


\end;
